package org.brewchain.backend.ordbgens.bc.mapper;

import java.util.List;
import onight.tfw.ojpa.ordb.StaticTableDaoSupport;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.brewchain.backend.ordbgens.bc.entity.BCMtxInput;
import org.brewchain.backend.ordbgens.bc.entity.BCMtxInputExample;
import org.brewchain.backend.ordbgens.bc.entity.BCMtxInputKey;

public interface BCMtxInputMapper extends StaticTableDaoSupport<BCMtxInput, BCMtxInputExample, BCMtxInputKey> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MTX_INPUT
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    @SelectProvider(type=BCMtxInputSqlProvider.class, method="countByExample")
    int countByExample(BCMtxInputExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MTX_INPUT
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    @DeleteProvider(type=BCMtxInputSqlProvider.class, method="deleteByExample")
    int deleteByExample(BCMtxInputExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MTX_INPUT
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    @Delete({
        "delete from BC_MTX_INPUT",
        "where MTX_INPUTID = #{mtxInputid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(BCMtxInputKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MTX_INPUT
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    @Insert({
        "insert into BC_MTX_INPUT (MTX_INPUTID, BC_ADDRESS, ",
        "MTX_HASH, BC_NONCE, ",
        "AMOUNT, TOKEN_ID, ",
        "TOKEN_SYMBOL, CRYPTO_TOKEN_HEX, ",
        "TX_STATUS, INDEX_IN_TX, ",
        "CREATE_TIME, UPDATE_TIME)",
        "values (#{mtxInputid,jdbcType=VARCHAR}, #{bcAddress,jdbcType=VARCHAR}, ",
        "#{mtxHash,jdbcType=VARCHAR}, #{bcNonce,jdbcType=INTEGER}, ",
        "#{amount,jdbcType=DECIMAL}, #{tokenId,jdbcType=VARCHAR}, ",
        "#{tokenSymbol,jdbcType=VARCHAR}, #{cryptoTokenHex,jdbcType=VARCHAR}, ",
        "#{txStatus,jdbcType=CHAR}, #{indexInTx,jdbcType=INTEGER}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})"
    })
    int insert(BCMtxInput record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MTX_INPUT
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    @InsertProvider(type=BCMtxInputSqlProvider.class, method="insertSelective")
    int insertSelective(BCMtxInput record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MTX_INPUT
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    @SelectProvider(type=BCMtxInputSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="MTX_INPUTID", property="mtxInputid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="BC_ADDRESS", property="bcAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="MTX_HASH", property="mtxHash", jdbcType=JdbcType.VARCHAR),
        @Result(column="BC_NONCE", property="bcNonce", jdbcType=JdbcType.INTEGER),
        @Result(column="AMOUNT", property="amount", jdbcType=JdbcType.DECIMAL),
        @Result(column="TOKEN_ID", property="tokenId", jdbcType=JdbcType.VARCHAR),
        @Result(column="TOKEN_SYMBOL", property="tokenSymbol", jdbcType=JdbcType.VARCHAR),
        @Result(column="CRYPTO_TOKEN_HEX", property="cryptoTokenHex", jdbcType=JdbcType.VARCHAR),
        @Result(column="TX_STATUS", property="txStatus", jdbcType=JdbcType.CHAR),
        @Result(column="INDEX_IN_TX", property="indexInTx", jdbcType=JdbcType.INTEGER),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="UPDATE_TIME", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<BCMtxInput> selectByExample(BCMtxInputExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MTX_INPUT
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    @Select({
        "select",
        "MTX_INPUTID, BC_ADDRESS, MTX_HASH, BC_NONCE, AMOUNT, TOKEN_ID, TOKEN_SYMBOL, ",
        "CRYPTO_TOKEN_HEX, TX_STATUS, INDEX_IN_TX, CREATE_TIME, UPDATE_TIME",
        "from BC_MTX_INPUT",
        "where MTX_INPUTID = #{mtxInputid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="MTX_INPUTID", property="mtxInputid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="BC_ADDRESS", property="bcAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="MTX_HASH", property="mtxHash", jdbcType=JdbcType.VARCHAR),
        @Result(column="BC_NONCE", property="bcNonce", jdbcType=JdbcType.INTEGER),
        @Result(column="AMOUNT", property="amount", jdbcType=JdbcType.DECIMAL),
        @Result(column="TOKEN_ID", property="tokenId", jdbcType=JdbcType.VARCHAR),
        @Result(column="TOKEN_SYMBOL", property="tokenSymbol", jdbcType=JdbcType.VARCHAR),
        @Result(column="CRYPTO_TOKEN_HEX", property="cryptoTokenHex", jdbcType=JdbcType.VARCHAR),
        @Result(column="TX_STATUS", property="txStatus", jdbcType=JdbcType.CHAR),
        @Result(column="INDEX_IN_TX", property="indexInTx", jdbcType=JdbcType.INTEGER),
        @Result(column="CREATE_TIME", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="UPDATE_TIME", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    BCMtxInput selectByPrimaryKey(BCMtxInputKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MTX_INPUT
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    @UpdateProvider(type=BCMtxInputSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") BCMtxInput record, @Param("example") BCMtxInputExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MTX_INPUT
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    @UpdateProvider(type=BCMtxInputSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") BCMtxInput record, @Param("example") BCMtxInputExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MTX_INPUT
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    @UpdateProvider(type=BCMtxInputSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(BCMtxInput record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MTX_INPUT
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    @Update({
        "update BC_MTX_INPUT",
        "set BC_ADDRESS = #{bcAddress,jdbcType=VARCHAR},",
          "MTX_HASH = #{mtxHash,jdbcType=VARCHAR},",
          "BC_NONCE = #{bcNonce,jdbcType=INTEGER},",
          "AMOUNT = #{amount,jdbcType=DECIMAL},",
          "TOKEN_ID = #{tokenId,jdbcType=VARCHAR},",
          "TOKEN_SYMBOL = #{tokenSymbol,jdbcType=VARCHAR},",
          "CRYPTO_TOKEN_HEX = #{cryptoTokenHex,jdbcType=VARCHAR},",
          "TX_STATUS = #{txStatus,jdbcType=CHAR},",
          "INDEX_IN_TX = #{indexInTx,jdbcType=INTEGER},",
          "CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},",
          "UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}",
        "where MTX_INPUTID = #{mtxInputid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(BCMtxInput record);
}