package org.brewchain.backend.ordbgens.bc.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
public class BCMutilTransactonExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    protected List<Criteria> oredCriteria;

    protected int offset;

    protected int limit;

    protected String sumCol;

    protected String groupSelClause;

    protected boolean forUpdate;

    protected String groupByClause;

    String selectCols;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public BCMutilTransactonExample() {
        oredCriteria = new ArrayList<Criteria>();
        offset = 0;
        limit = Integer.MAX_VALUE;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        this.offset= 0;
        this.limit= Integer.MAX_VALUE;
        this.sumCol=null;
        this.groupSelClause=null;
        this.groupByClause=null;
        this.forUpdate=false;
    }

    public void setOffset(int offset) {
         this.offset = offset;
    }

    public int getOffset() {
          return offset;
    }

    public void setLimit(int limit) {
         this.limit = limit;
    }

    public int getLimit() {
          return limit;
    }

    public void setSumCol(String sumCol) {
         this.sumCol = sumCol;
    }

    public String getSumCol() {
          return sumCol;
    }

    public void setGroupSelClause(String groupSelClause) {
         this.groupSelClause = groupSelClause;
    }

    public String getGroupSelClause() {
          return groupSelClause;
    }

    public void setForUpdate(boolean forUpdate) {
         this.forUpdate = forUpdate;
    }

    public boolean isForUpdate() {
          return forUpdate;
    }

    public void setGroupByClause(String groupByClause) {
         this.groupByClause = groupByClause;
    }

    public String getGroupByClause() {
          return groupByClause;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    @Data
    public abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        public GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        public void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        public void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        public void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTxHashIsNull() {
            addCriterion("TX_HASH is null");
            return (Criteria) this;
        }

        public Criteria andTxHashIsNotNull() {
            addCriterion("TX_HASH is not null");
            return (Criteria) this;
        }

        public Criteria andTxHashEqualTo(String value) {
            addCriterion("TX_HASH =", value, "txHash");
            return (Criteria) this;
        }

        public Criteria andTxHashNotEqualTo(String value) {
            addCriterion("TX_HASH <>", value, "txHash");
            return (Criteria) this;
        }

        public Criteria andTxHashGreaterThan(String value) {
            addCriterion("TX_HASH >", value, "txHash");
            return (Criteria) this;
        }

        public Criteria andTxHashGreaterThanOrEqualTo(String value) {
            addCriterion("TX_HASH >=", value, "txHash");
            return (Criteria) this;
        }

        public Criteria andTxHashLessThan(String value) {
            addCriterion("TX_HASH <", value, "txHash");
            return (Criteria) this;
        }

        public Criteria andTxHashLessThanOrEqualTo(String value) {
            addCriterion("TX_HASH <=", value, "txHash");
            return (Criteria) this;
        }

        public Criteria andTxHashLike(String value) {
            addCriterion("TX_HASH like", value, "txHash");
            return (Criteria) this;
        }

        public Criteria andTxHashNotLike(String value) {
            addCriterion("TX_HASH not like", value, "txHash");
            return (Criteria) this;
        }

        public Criteria andTxHashIn(List<String> values) {
            addCriterion("TX_HASH in", values, "txHash");
            return (Criteria) this;
        }

        public Criteria andTxHashNotIn(List<String> values) {
            addCriterion("TX_HASH not in", values, "txHash");
            return (Criteria) this;
        }

        public Criteria andTxHashBetween(String value1, String value2) {
            addCriterion("TX_HASH between", value1, value2, "txHash");
            return (Criteria) this;
        }

        public Criteria andTxHashNotBetween(String value1, String value2) {
            addCriterion("TX_HASH not between", value1, value2, "txHash");
            return (Criteria) this;
        }

        public Criteria andBversionIsNull() {
            addCriterion("BVERSION is null");
            return (Criteria) this;
        }

        public Criteria andBversionIsNotNull() {
            addCriterion("BVERSION is not null");
            return (Criteria) this;
        }

        public Criteria andBversionEqualTo(String value) {
            addCriterion("BVERSION =", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionNotEqualTo(String value) {
            addCriterion("BVERSION <>", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionGreaterThan(String value) {
            addCriterion("BVERSION >", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionGreaterThanOrEqualTo(String value) {
            addCriterion("BVERSION >=", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionLessThan(String value) {
            addCriterion("BVERSION <", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionLessThanOrEqualTo(String value) {
            addCriterion("BVERSION <=", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionLike(String value) {
            addCriterion("BVERSION like", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionNotLike(String value) {
            addCriterion("BVERSION not like", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionIn(List<String> values) {
            addCriterion("BVERSION in", values, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionNotIn(List<String> values) {
            addCriterion("BVERSION not in", values, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionBetween(String value1, String value2) {
            addCriterion("BVERSION between", value1, value2, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionNotBetween(String value1, String value2) {
            addCriterion("BVERSION not between", value1, value2, "bversion");
            return (Criteria) this;
        }

        public Criteria andHashMerkleRootIsNull() {
            addCriterion("HASH_MERKLE_ROOT is null");
            return (Criteria) this;
        }

        public Criteria andHashMerkleRootIsNotNull() {
            addCriterion("HASH_MERKLE_ROOT is not null");
            return (Criteria) this;
        }

        public Criteria andHashMerkleRootEqualTo(String value) {
            addCriterion("HASH_MERKLE_ROOT =", value, "hashMerkleRoot");
            return (Criteria) this;
        }

        public Criteria andHashMerkleRootNotEqualTo(String value) {
            addCriterion("HASH_MERKLE_ROOT <>", value, "hashMerkleRoot");
            return (Criteria) this;
        }

        public Criteria andHashMerkleRootGreaterThan(String value) {
            addCriterion("HASH_MERKLE_ROOT >", value, "hashMerkleRoot");
            return (Criteria) this;
        }

        public Criteria andHashMerkleRootGreaterThanOrEqualTo(String value) {
            addCriterion("HASH_MERKLE_ROOT >=", value, "hashMerkleRoot");
            return (Criteria) this;
        }

        public Criteria andHashMerkleRootLessThan(String value) {
            addCriterion("HASH_MERKLE_ROOT <", value, "hashMerkleRoot");
            return (Criteria) this;
        }

        public Criteria andHashMerkleRootLessThanOrEqualTo(String value) {
            addCriterion("HASH_MERKLE_ROOT <=", value, "hashMerkleRoot");
            return (Criteria) this;
        }

        public Criteria andHashMerkleRootLike(String value) {
            addCriterion("HASH_MERKLE_ROOT like", value, "hashMerkleRoot");
            return (Criteria) this;
        }

        public Criteria andHashMerkleRootNotLike(String value) {
            addCriterion("HASH_MERKLE_ROOT not like", value, "hashMerkleRoot");
            return (Criteria) this;
        }

        public Criteria andHashMerkleRootIn(List<String> values) {
            addCriterion("HASH_MERKLE_ROOT in", values, "hashMerkleRoot");
            return (Criteria) this;
        }

        public Criteria andHashMerkleRootNotIn(List<String> values) {
            addCriterion("HASH_MERKLE_ROOT not in", values, "hashMerkleRoot");
            return (Criteria) this;
        }

        public Criteria andHashMerkleRootBetween(String value1, String value2) {
            addCriterion("HASH_MERKLE_ROOT between", value1, value2, "hashMerkleRoot");
            return (Criteria) this;
        }

        public Criteria andHashMerkleRootNotBetween(String value1, String value2) {
            addCriterion("HASH_MERKLE_ROOT not between", value1, value2, "hashMerkleRoot");
            return (Criteria) this;
        }

        public Criteria andBlockHeightIsNull() {
            addCriterion("BLOCK_HEIGHT is null");
            return (Criteria) this;
        }

        public Criteria andBlockHeightIsNotNull() {
            addCriterion("BLOCK_HEIGHT is not null");
            return (Criteria) this;
        }

        public Criteria andBlockHeightEqualTo(BigDecimal value) {
            addCriterion("BLOCK_HEIGHT =", value, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightNotEqualTo(BigDecimal value) {
            addCriterion("BLOCK_HEIGHT <>", value, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightGreaterThan(BigDecimal value) {
            addCriterion("BLOCK_HEIGHT >", value, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("BLOCK_HEIGHT >=", value, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightLessThan(BigDecimal value) {
            addCriterion("BLOCK_HEIGHT <", value, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightLessThanOrEqualTo(BigDecimal value) {
            addCriterion("BLOCK_HEIGHT <=", value, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightIn(List<BigDecimal> values) {
            addCriterion("BLOCK_HEIGHT in", values, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightNotIn(List<BigDecimal> values) {
            addCriterion("BLOCK_HEIGHT not in", values, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BLOCK_HEIGHT between", value1, value2, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BLOCK_HEIGHT not between", value1, value2, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andAddressInCountIsNull() {
            addCriterion("ADDRESS_IN_COUNT is null");
            return (Criteria) this;
        }

        public Criteria andAddressInCountIsNotNull() {
            addCriterion("ADDRESS_IN_COUNT is not null");
            return (Criteria) this;
        }

        public Criteria andAddressInCountEqualTo(Integer value) {
            addCriterion("ADDRESS_IN_COUNT =", value, "addressInCount");
            return (Criteria) this;
        }

        public Criteria andAddressInCountNotEqualTo(Integer value) {
            addCriterion("ADDRESS_IN_COUNT <>", value, "addressInCount");
            return (Criteria) this;
        }

        public Criteria andAddressInCountGreaterThan(Integer value) {
            addCriterion("ADDRESS_IN_COUNT >", value, "addressInCount");
            return (Criteria) this;
        }

        public Criteria andAddressInCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("ADDRESS_IN_COUNT >=", value, "addressInCount");
            return (Criteria) this;
        }

        public Criteria andAddressInCountLessThan(Integer value) {
            addCriterion("ADDRESS_IN_COUNT <", value, "addressInCount");
            return (Criteria) this;
        }

        public Criteria andAddressInCountLessThanOrEqualTo(Integer value) {
            addCriterion("ADDRESS_IN_COUNT <=", value, "addressInCount");
            return (Criteria) this;
        }

        public Criteria andAddressInCountIn(List<Integer> values) {
            addCriterion("ADDRESS_IN_COUNT in", values, "addressInCount");
            return (Criteria) this;
        }

        public Criteria andAddressInCountNotIn(List<Integer> values) {
            addCriterion("ADDRESS_IN_COUNT not in", values, "addressInCount");
            return (Criteria) this;
        }

        public Criteria andAddressInCountBetween(Integer value1, Integer value2) {
            addCriterion("ADDRESS_IN_COUNT between", value1, value2, "addressInCount");
            return (Criteria) this;
        }

        public Criteria andAddressInCountNotBetween(Integer value1, Integer value2) {
            addCriterion("ADDRESS_IN_COUNT not between", value1, value2, "addressInCount");
            return (Criteria) this;
        }

        public Criteria andAddressOutCountIsNull() {
            addCriterion("ADDRESS_OUT_COUNT is null");
            return (Criteria) this;
        }

        public Criteria andAddressOutCountIsNotNull() {
            addCriterion("ADDRESS_OUT_COUNT is not null");
            return (Criteria) this;
        }

        public Criteria andAddressOutCountEqualTo(Integer value) {
            addCriterion("ADDRESS_OUT_COUNT =", value, "addressOutCount");
            return (Criteria) this;
        }

        public Criteria andAddressOutCountNotEqualTo(Integer value) {
            addCriterion("ADDRESS_OUT_COUNT <>", value, "addressOutCount");
            return (Criteria) this;
        }

        public Criteria andAddressOutCountGreaterThan(Integer value) {
            addCriterion("ADDRESS_OUT_COUNT >", value, "addressOutCount");
            return (Criteria) this;
        }

        public Criteria andAddressOutCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("ADDRESS_OUT_COUNT >=", value, "addressOutCount");
            return (Criteria) this;
        }

        public Criteria andAddressOutCountLessThan(Integer value) {
            addCriterion("ADDRESS_OUT_COUNT <", value, "addressOutCount");
            return (Criteria) this;
        }

        public Criteria andAddressOutCountLessThanOrEqualTo(Integer value) {
            addCriterion("ADDRESS_OUT_COUNT <=", value, "addressOutCount");
            return (Criteria) this;
        }

        public Criteria andAddressOutCountIn(List<Integer> values) {
            addCriterion("ADDRESS_OUT_COUNT in", values, "addressOutCount");
            return (Criteria) this;
        }

        public Criteria andAddressOutCountNotIn(List<Integer> values) {
            addCriterion("ADDRESS_OUT_COUNT not in", values, "addressOutCount");
            return (Criteria) this;
        }

        public Criteria andAddressOutCountBetween(Integer value1, Integer value2) {
            addCriterion("ADDRESS_OUT_COUNT between", value1, value2, "addressOutCount");
            return (Criteria) this;
        }

        public Criteria andAddressOutCountNotBetween(Integer value1, Integer value2) {
            addCriterion("ADDRESS_OUT_COUNT not between", value1, value2, "addressOutCount");
            return (Criteria) this;
        }

        public Criteria andPropCountIsNull() {
            addCriterion("PROP_COUNT is null");
            return (Criteria) this;
        }

        public Criteria andPropCountIsNotNull() {
            addCriterion("PROP_COUNT is not null");
            return (Criteria) this;
        }

        public Criteria andPropCountEqualTo(Integer value) {
            addCriterion("PROP_COUNT =", value, "propCount");
            return (Criteria) this;
        }

        public Criteria andPropCountNotEqualTo(Integer value) {
            addCriterion("PROP_COUNT <>", value, "propCount");
            return (Criteria) this;
        }

        public Criteria andPropCountGreaterThan(Integer value) {
            addCriterion("PROP_COUNT >", value, "propCount");
            return (Criteria) this;
        }

        public Criteria andPropCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("PROP_COUNT >=", value, "propCount");
            return (Criteria) this;
        }

        public Criteria andPropCountLessThan(Integer value) {
            addCriterion("PROP_COUNT <", value, "propCount");
            return (Criteria) this;
        }

        public Criteria andPropCountLessThanOrEqualTo(Integer value) {
            addCriterion("PROP_COUNT <=", value, "propCount");
            return (Criteria) this;
        }

        public Criteria andPropCountIn(List<Integer> values) {
            addCriterion("PROP_COUNT in", values, "propCount");
            return (Criteria) this;
        }

        public Criteria andPropCountNotIn(List<Integer> values) {
            addCriterion("PROP_COUNT not in", values, "propCount");
            return (Criteria) this;
        }

        public Criteria andPropCountBetween(Integer value1, Integer value2) {
            addCriterion("PROP_COUNT between", value1, value2, "propCount");
            return (Criteria) this;
        }

        public Criteria andPropCountNotBetween(Integer value1, Integer value2) {
            addCriterion("PROP_COUNT not between", value1, value2, "propCount");
            return (Criteria) this;
        }

        public Criteria andTxStatusIsNull() {
            addCriterion("TX_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andTxStatusIsNotNull() {
            addCriterion("TX_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andTxStatusEqualTo(String value) {
            addCriterion("TX_STATUS =", value, "txStatus");
            return (Criteria) this;
        }

        public Criteria andTxStatusNotEqualTo(String value) {
            addCriterion("TX_STATUS <>", value, "txStatus");
            return (Criteria) this;
        }

        public Criteria andTxStatusGreaterThan(String value) {
            addCriterion("TX_STATUS >", value, "txStatus");
            return (Criteria) this;
        }

        public Criteria andTxStatusGreaterThanOrEqualTo(String value) {
            addCriterion("TX_STATUS >=", value, "txStatus");
            return (Criteria) this;
        }

        public Criteria andTxStatusLessThan(String value) {
            addCriterion("TX_STATUS <", value, "txStatus");
            return (Criteria) this;
        }

        public Criteria andTxStatusLessThanOrEqualTo(String value) {
            addCriterion("TX_STATUS <=", value, "txStatus");
            return (Criteria) this;
        }

        public Criteria andTxStatusLike(String value) {
            addCriterion("TX_STATUS like", value, "txStatus");
            return (Criteria) this;
        }

        public Criteria andTxStatusNotLike(String value) {
            addCriterion("TX_STATUS not like", value, "txStatus");
            return (Criteria) this;
        }

        public Criteria andTxStatusIn(List<String> values) {
            addCriterion("TX_STATUS in", values, "txStatus");
            return (Criteria) this;
        }

        public Criteria andTxStatusNotIn(List<String> values) {
            addCriterion("TX_STATUS not in", values, "txStatus");
            return (Criteria) this;
        }

        public Criteria andTxStatusBetween(String value1, String value2) {
            addCriterion("TX_STATUS between", value1, value2, "txStatus");
            return (Criteria) this;
        }

        public Criteria andTxStatusNotBetween(String value1, String value2) {
            addCriterion("TX_STATUS not between", value1, value2, "txStatus");
            return (Criteria) this;
        }

        public Criteria andIndexInBlockIsNull() {
            addCriterion("INDEX_IN_BLOCK is null");
            return (Criteria) this;
        }

        public Criteria andIndexInBlockIsNotNull() {
            addCriterion("INDEX_IN_BLOCK is not null");
            return (Criteria) this;
        }

        public Criteria andIndexInBlockEqualTo(Integer value) {
            addCriterion("INDEX_IN_BLOCK =", value, "indexInBlock");
            return (Criteria) this;
        }

        public Criteria andIndexInBlockNotEqualTo(Integer value) {
            addCriterion("INDEX_IN_BLOCK <>", value, "indexInBlock");
            return (Criteria) this;
        }

        public Criteria andIndexInBlockGreaterThan(Integer value) {
            addCriterion("INDEX_IN_BLOCK >", value, "indexInBlock");
            return (Criteria) this;
        }

        public Criteria andIndexInBlockGreaterThanOrEqualTo(Integer value) {
            addCriterion("INDEX_IN_BLOCK >=", value, "indexInBlock");
            return (Criteria) this;
        }

        public Criteria andIndexInBlockLessThan(Integer value) {
            addCriterion("INDEX_IN_BLOCK <", value, "indexInBlock");
            return (Criteria) this;
        }

        public Criteria andIndexInBlockLessThanOrEqualTo(Integer value) {
            addCriterion("INDEX_IN_BLOCK <=", value, "indexInBlock");
            return (Criteria) this;
        }

        public Criteria andIndexInBlockIn(List<Integer> values) {
            addCriterion("INDEX_IN_BLOCK in", values, "indexInBlock");
            return (Criteria) this;
        }

        public Criteria andIndexInBlockNotIn(List<Integer> values) {
            addCriterion("INDEX_IN_BLOCK not in", values, "indexInBlock");
            return (Criteria) this;
        }

        public Criteria andIndexInBlockBetween(Integer value1, Integer value2) {
            addCriterion("INDEX_IN_BLOCK between", value1, value2, "indexInBlock");
            return (Criteria) this;
        }

        public Criteria andIndexInBlockNotBetween(Integer value1, Integer value2) {
            addCriterion("INDEX_IN_BLOCK not between", value1, value2, "indexInBlock");
            return (Criteria) this;
        }

        public Criteria andResultsHexIsNull() {
            addCriterion("RESULTS_HEX is null");
            return (Criteria) this;
        }

        public Criteria andResultsHexIsNotNull() {
            addCriterion("RESULTS_HEX is not null");
            return (Criteria) this;
        }

        public Criteria andResultsHexEqualTo(String value) {
            addCriterion("RESULTS_HEX =", value, "resultsHex");
            return (Criteria) this;
        }

        public Criteria andResultsHexNotEqualTo(String value) {
            addCriterion("RESULTS_HEX <>", value, "resultsHex");
            return (Criteria) this;
        }

        public Criteria andResultsHexGreaterThan(String value) {
            addCriterion("RESULTS_HEX >", value, "resultsHex");
            return (Criteria) this;
        }

        public Criteria andResultsHexGreaterThanOrEqualTo(String value) {
            addCriterion("RESULTS_HEX >=", value, "resultsHex");
            return (Criteria) this;
        }

        public Criteria andResultsHexLessThan(String value) {
            addCriterion("RESULTS_HEX <", value, "resultsHex");
            return (Criteria) this;
        }

        public Criteria andResultsHexLessThanOrEqualTo(String value) {
            addCriterion("RESULTS_HEX <=", value, "resultsHex");
            return (Criteria) this;
        }

        public Criteria andResultsHexLike(String value) {
            addCriterion("RESULTS_HEX like", value, "resultsHex");
            return (Criteria) this;
        }

        public Criteria andResultsHexNotLike(String value) {
            addCriterion("RESULTS_HEX not like", value, "resultsHex");
            return (Criteria) this;
        }

        public Criteria andResultsHexIn(List<String> values) {
            addCriterion("RESULTS_HEX in", values, "resultsHex");
            return (Criteria) this;
        }

        public Criteria andResultsHexNotIn(List<String> values) {
            addCriterion("RESULTS_HEX not in", values, "resultsHex");
            return (Criteria) this;
        }

        public Criteria andResultsHexBetween(String value1, String value2) {
            addCriterion("RESULTS_HEX between", value1, value2, "resultsHex");
            return (Criteria) this;
        }

        public Criteria andResultsHexNotBetween(String value1, String value2) {
            addCriterion("RESULTS_HEX not between", value1, value2, "resultsHex");
            return (Criteria) this;
        }

        public Criteria andDataIsNull() {
            addCriterion("DATA is null");
            return (Criteria) this;
        }

        public Criteria andDataIsNotNull() {
            addCriterion("DATA is not null");
            return (Criteria) this;
        }

        public Criteria andDataEqualTo(String value) {
            addCriterion("DATA =", value, "data");
            return (Criteria) this;
        }

        public Criteria andDataNotEqualTo(String value) {
            addCriterion("DATA <>", value, "data");
            return (Criteria) this;
        }

        public Criteria andDataGreaterThan(String value) {
            addCriterion("DATA >", value, "data");
            return (Criteria) this;
        }

        public Criteria andDataGreaterThanOrEqualTo(String value) {
            addCriterion("DATA >=", value, "data");
            return (Criteria) this;
        }

        public Criteria andDataLessThan(String value) {
            addCriterion("DATA <", value, "data");
            return (Criteria) this;
        }

        public Criteria andDataLessThanOrEqualTo(String value) {
            addCriterion("DATA <=", value, "data");
            return (Criteria) this;
        }

        public Criteria andDataLike(String value) {
            addCriterion("DATA like", value, "data");
            return (Criteria) this;
        }

        public Criteria andDataNotLike(String value) {
            addCriterion("DATA not like", value, "data");
            return (Criteria) this;
        }

        public Criteria andDataIn(List<String> values) {
            addCriterion("DATA in", values, "data");
            return (Criteria) this;
        }

        public Criteria andDataNotIn(List<String> values) {
            addCriterion("DATA not in", values, "data");
            return (Criteria) this;
        }

        public Criteria andDataBetween(String value1, String value2) {
            addCriterion("DATA between", value1, value2, "data");
            return (Criteria) this;
        }

        public Criteria andDataNotBetween(String value1, String value2) {
            addCriterion("DATA not between", value1, value2, "data");
            return (Criteria) this;
        }

        public Criteria andExtraDataIsNull() {
            addCriterion("EXTRA_DATA is null");
            return (Criteria) this;
        }

        public Criteria andExtraDataIsNotNull() {
            addCriterion("EXTRA_DATA is not null");
            return (Criteria) this;
        }

        public Criteria andExtraDataEqualTo(String value) {
            addCriterion("EXTRA_DATA =", value, "extraData");
            return (Criteria) this;
        }

        public Criteria andExtraDataNotEqualTo(String value) {
            addCriterion("EXTRA_DATA <>", value, "extraData");
            return (Criteria) this;
        }

        public Criteria andExtraDataGreaterThan(String value) {
            addCriterion("EXTRA_DATA >", value, "extraData");
            return (Criteria) this;
        }

        public Criteria andExtraDataGreaterThanOrEqualTo(String value) {
            addCriterion("EXTRA_DATA >=", value, "extraData");
            return (Criteria) this;
        }

        public Criteria andExtraDataLessThan(String value) {
            addCriterion("EXTRA_DATA <", value, "extraData");
            return (Criteria) this;
        }

        public Criteria andExtraDataLessThanOrEqualTo(String value) {
            addCriterion("EXTRA_DATA <=", value, "extraData");
            return (Criteria) this;
        }

        public Criteria andExtraDataLike(String value) {
            addCriterion("EXTRA_DATA like", value, "extraData");
            return (Criteria) this;
        }

        public Criteria andExtraDataNotLike(String value) {
            addCriterion("EXTRA_DATA not like", value, "extraData");
            return (Criteria) this;
        }

        public Criteria andExtraDataIn(List<String> values) {
            addCriterion("EXTRA_DATA in", values, "extraData");
            return (Criteria) this;
        }

        public Criteria andExtraDataNotIn(List<String> values) {
            addCriterion("EXTRA_DATA not in", values, "extraData");
            return (Criteria) this;
        }

        public Criteria andExtraDataBetween(String value1, String value2) {
            addCriterion("EXTRA_DATA between", value1, value2, "extraData");
            return (Criteria) this;
        }

        public Criteria andExtraDataNotBetween(String value1, String value2) {
            addCriterion("EXTRA_DATA not between", value1, value2, "extraData");
            return (Criteria) this;
        }

        public Criteria andTxTimestampIsNull() {
            addCriterion("TX_TIMESTAMP is null");
            return (Criteria) this;
        }

        public Criteria andTxTimestampIsNotNull() {
            addCriterion("TX_TIMESTAMP is not null");
            return (Criteria) this;
        }

        public Criteria andTxTimestampEqualTo(BigDecimal value) {
            addCriterion("TX_TIMESTAMP =", value, "txTimestamp");
            return (Criteria) this;
        }

        public Criteria andTxTimestampNotEqualTo(BigDecimal value) {
            addCriterion("TX_TIMESTAMP <>", value, "txTimestamp");
            return (Criteria) this;
        }

        public Criteria andTxTimestampGreaterThan(BigDecimal value) {
            addCriterion("TX_TIMESTAMP >", value, "txTimestamp");
            return (Criteria) this;
        }

        public Criteria andTxTimestampGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TX_TIMESTAMP >=", value, "txTimestamp");
            return (Criteria) this;
        }

        public Criteria andTxTimestampLessThan(BigDecimal value) {
            addCriterion("TX_TIMESTAMP <", value, "txTimestamp");
            return (Criteria) this;
        }

        public Criteria andTxTimestampLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TX_TIMESTAMP <=", value, "txTimestamp");
            return (Criteria) this;
        }

        public Criteria andTxTimestampIn(List<BigDecimal> values) {
            addCriterion("TX_TIMESTAMP in", values, "txTimestamp");
            return (Criteria) this;
        }

        public Criteria andTxTimestampNotIn(List<BigDecimal> values) {
            addCriterion("TX_TIMESTAMP not in", values, "txTimestamp");
            return (Criteria) this;
        }

        public Criteria andTxTimestampBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TX_TIMESTAMP between", value1, value2, "txTimestamp");
            return (Criteria) this;
        }

        public Criteria andTxTimestampNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TX_TIMESTAMP not between", value1, value2, "txTimestamp");
            return (Criteria) this;
        }

        public Criteria andTxTypeIsNull() {
            addCriterion("TX_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andTxTypeIsNotNull() {
            addCriterion("TX_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andTxTypeEqualTo(Integer value) {
            addCriterion("TX_TYPE =", value, "txType");
            return (Criteria) this;
        }

        public Criteria andTxTypeNotEqualTo(Integer value) {
            addCriterion("TX_TYPE <>", value, "txType");
            return (Criteria) this;
        }

        public Criteria andTxTypeGreaterThan(Integer value) {
            addCriterion("TX_TYPE >", value, "txType");
            return (Criteria) this;
        }

        public Criteria andTxTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("TX_TYPE >=", value, "txType");
            return (Criteria) this;
        }

        public Criteria andTxTypeLessThan(Integer value) {
            addCriterion("TX_TYPE <", value, "txType");
            return (Criteria) this;
        }

        public Criteria andTxTypeLessThanOrEqualTo(Integer value) {
            addCriterion("TX_TYPE <=", value, "txType");
            return (Criteria) this;
        }

        public Criteria andTxTypeIn(List<Integer> values) {
            addCriterion("TX_TYPE in", values, "txType");
            return (Criteria) this;
        }

        public Criteria andTxTypeNotIn(List<Integer> values) {
            addCriterion("TX_TYPE not in", values, "txType");
            return (Criteria) this;
        }

        public Criteria andTxTypeBetween(Integer value1, Integer value2) {
            addCriterion("TX_TYPE between", value1, value2, "txType");
            return (Criteria) this;
        }

        public Criteria andTxTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("TX_TYPE not between", value1, value2, "txType");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("CREATE_TIME =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("CREATE_TIME <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("CREATE_TIME >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("CREATE_TIME <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("CREATE_TIME in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("CREATE_TIME not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("UPDATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("UPDATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("UPDATE_TIME =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("UPDATE_TIME <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("UPDATE_TIME >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("UPDATE_TIME >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("UPDATE_TIME <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("UPDATE_TIME <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("UPDATE_TIME in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("UPDATE_TIME not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("UPDATE_TIME between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("UPDATE_TIME not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andTxHashLikeInsensitive(String value) {
            addCriterion("upper(TX_HASH) like", value.toUpperCase(), "txHash");
            return (Criteria) this;
        }

        public Criteria andBversionLikeInsensitive(String value) {
            addCriterion("upper(BVERSION) like", value.toUpperCase(), "bversion");
            return (Criteria) this;
        }

        public Criteria andHashMerkleRootLikeInsensitive(String value) {
            addCriterion("upper(HASH_MERKLE_ROOT) like", value.toUpperCase(), "hashMerkleRoot");
            return (Criteria) this;
        }

        public Criteria andTxStatusLikeInsensitive(String value) {
            addCriterion("upper(TX_STATUS) like", value.toUpperCase(), "txStatus");
            return (Criteria) this;
        }

        public Criteria andResultsHexLikeInsensitive(String value) {
            addCriterion("upper(RESULTS_HEX) like", value.toUpperCase(), "resultsHex");
            return (Criteria) this;
        }

        public Criteria andDataLikeInsensitive(String value) {
            addCriterion("upper(DATA) like", value.toUpperCase(), "data");
            return (Criteria) this;
        }

        public Criteria andExtraDataLikeInsensitive(String value) {
            addCriterion("upper(EXTRA_DATA) like", value.toUpperCase(), "extraData");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated do_not_delete_during_merge Tue Aug 21 20:42:28 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        public Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BC_MUTIL_TRANSACTON
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    @Data
    @NoArgsConstructor
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        public Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        public Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        public Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        public Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        public Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}