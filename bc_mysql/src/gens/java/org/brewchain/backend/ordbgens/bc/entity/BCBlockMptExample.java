package org.brewchain.backend.ordbgens.bc.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
public class BCBlockMptExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    protected List<Criteria> oredCriteria;

    protected int offset;

    protected int limit;

    protected String sumCol;

    protected String groupSelClause;

    protected boolean forUpdate;

    protected String groupByClause;

    String selectCols;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    public BCBlockMptExample() {
        oredCriteria = new ArrayList<Criteria>();
        offset = 0;
        limit = Integer.MAX_VALUE;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        this.offset= 0;
        this.limit= Integer.MAX_VALUE;
        this.sumCol=null;
        this.groupSelClause=null;
        this.groupByClause=null;
        this.forUpdate=false;
    }

    public void setOffset(int offset) {
         this.offset = offset;
    }

    public int getOffset() {
          return offset;
    }

    public void setLimit(int limit) {
         this.limit = limit;
    }

    public int getLimit() {
          return limit;
    }

    public void setSumCol(String sumCol) {
         this.sumCol = sumCol;
    }

    public String getSumCol() {
          return sumCol;
    }

    public void setGroupSelClause(String groupSelClause) {
         this.groupSelClause = groupSelClause;
    }

    public String getGroupSelClause() {
          return groupSelClause;
    }

    public void setForUpdate(boolean forUpdate) {
         this.forUpdate = forUpdate;
    }

    public boolean isForUpdate() {
          return forUpdate;
    }

    public void setGroupByClause(String groupByClause) {
         this.groupByClause = groupByClause;
    }

    public String getGroupByClause() {
          return groupByClause;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    @Data
    public abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        public GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        public void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        public void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        public void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLogUuidIsNull() {
            addCriterion("LOG_UUID is null");
            return (Criteria) this;
        }

        public Criteria andLogUuidIsNotNull() {
            addCriterion("LOG_UUID is not null");
            return (Criteria) this;
        }

        public Criteria andLogUuidEqualTo(String value) {
            addCriterion("LOG_UUID =", value, "logUuid");
            return (Criteria) this;
        }

        public Criteria andLogUuidNotEqualTo(String value) {
            addCriterion("LOG_UUID <>", value, "logUuid");
            return (Criteria) this;
        }

        public Criteria andLogUuidGreaterThan(String value) {
            addCriterion("LOG_UUID >", value, "logUuid");
            return (Criteria) this;
        }

        public Criteria andLogUuidGreaterThanOrEqualTo(String value) {
            addCriterion("LOG_UUID >=", value, "logUuid");
            return (Criteria) this;
        }

        public Criteria andLogUuidLessThan(String value) {
            addCriterion("LOG_UUID <", value, "logUuid");
            return (Criteria) this;
        }

        public Criteria andLogUuidLessThanOrEqualTo(String value) {
            addCriterion("LOG_UUID <=", value, "logUuid");
            return (Criteria) this;
        }

        public Criteria andLogUuidLike(String value) {
            addCriterion("LOG_UUID like", value, "logUuid");
            return (Criteria) this;
        }

        public Criteria andLogUuidNotLike(String value) {
            addCriterion("LOG_UUID not like", value, "logUuid");
            return (Criteria) this;
        }

        public Criteria andLogUuidIn(List<String> values) {
            addCriterion("LOG_UUID in", values, "logUuid");
            return (Criteria) this;
        }

        public Criteria andLogUuidNotIn(List<String> values) {
            addCriterion("LOG_UUID not in", values, "logUuid");
            return (Criteria) this;
        }

        public Criteria andLogUuidBetween(String value1, String value2) {
            addCriterion("LOG_UUID between", value1, value2, "logUuid");
            return (Criteria) this;
        }

        public Criteria andLogUuidNotBetween(String value1, String value2) {
            addCriterion("LOG_UUID not between", value1, value2, "logUuid");
            return (Criteria) this;
        }

        public Criteria andBversionIsNull() {
            addCriterion("BVERSION is null");
            return (Criteria) this;
        }

        public Criteria andBversionIsNotNull() {
            addCriterion("BVERSION is not null");
            return (Criteria) this;
        }

        public Criteria andBversionEqualTo(String value) {
            addCriterion("BVERSION =", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionNotEqualTo(String value) {
            addCriterion("BVERSION <>", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionGreaterThan(String value) {
            addCriterion("BVERSION >", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionGreaterThanOrEqualTo(String value) {
            addCriterion("BVERSION >=", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionLessThan(String value) {
            addCriterion("BVERSION <", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionLessThanOrEqualTo(String value) {
            addCriterion("BVERSION <=", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionLike(String value) {
            addCriterion("BVERSION like", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionNotLike(String value) {
            addCriterion("BVERSION not like", value, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionIn(List<String> values) {
            addCriterion("BVERSION in", values, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionNotIn(List<String> values) {
            addCriterion("BVERSION not in", values, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionBetween(String value1, String value2) {
            addCriterion("BVERSION between", value1, value2, "bversion");
            return (Criteria) this;
        }

        public Criteria andBversionNotBetween(String value1, String value2) {
            addCriterion("BVERSION not between", value1, value2, "bversion");
            return (Criteria) this;
        }

        public Criteria andBlockHeightIsNull() {
            addCriterion("BLOCK_HEIGHT is null");
            return (Criteria) this;
        }

        public Criteria andBlockHeightIsNotNull() {
            addCriterion("BLOCK_HEIGHT is not null");
            return (Criteria) this;
        }

        public Criteria andBlockHeightEqualTo(BigDecimal value) {
            addCriterion("BLOCK_HEIGHT =", value, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightNotEqualTo(BigDecimal value) {
            addCriterion("BLOCK_HEIGHT <>", value, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightGreaterThan(BigDecimal value) {
            addCriterion("BLOCK_HEIGHT >", value, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("BLOCK_HEIGHT >=", value, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightLessThan(BigDecimal value) {
            addCriterion("BLOCK_HEIGHT <", value, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightLessThanOrEqualTo(BigDecimal value) {
            addCriterion("BLOCK_HEIGHT <=", value, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightIn(List<BigDecimal> values) {
            addCriterion("BLOCK_HEIGHT in", values, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightNotIn(List<BigDecimal> values) {
            addCriterion("BLOCK_HEIGHT not in", values, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BLOCK_HEIGHT between", value1, value2, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andBlockHeightNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("BLOCK_HEIGHT not between", value1, value2, "blockHeight");
            return (Criteria) this;
        }

        public Criteria andHashMptIsNull() {
            addCriterion("HASH_MPT is null");
            return (Criteria) this;
        }

        public Criteria andHashMptIsNotNull() {
            addCriterion("HASH_MPT is not null");
            return (Criteria) this;
        }

        public Criteria andHashMptEqualTo(String value) {
            addCriterion("HASH_MPT =", value, "hashMpt");
            return (Criteria) this;
        }

        public Criteria andHashMptNotEqualTo(String value) {
            addCriterion("HASH_MPT <>", value, "hashMpt");
            return (Criteria) this;
        }

        public Criteria andHashMptGreaterThan(String value) {
            addCriterion("HASH_MPT >", value, "hashMpt");
            return (Criteria) this;
        }

        public Criteria andHashMptGreaterThanOrEqualTo(String value) {
            addCriterion("HASH_MPT >=", value, "hashMpt");
            return (Criteria) this;
        }

        public Criteria andHashMptLessThan(String value) {
            addCriterion("HASH_MPT <", value, "hashMpt");
            return (Criteria) this;
        }

        public Criteria andHashMptLessThanOrEqualTo(String value) {
            addCriterion("HASH_MPT <=", value, "hashMpt");
            return (Criteria) this;
        }

        public Criteria andHashMptLike(String value) {
            addCriterion("HASH_MPT like", value, "hashMpt");
            return (Criteria) this;
        }

        public Criteria andHashMptNotLike(String value) {
            addCriterion("HASH_MPT not like", value, "hashMpt");
            return (Criteria) this;
        }

        public Criteria andHashMptIn(List<String> values) {
            addCriterion("HASH_MPT in", values, "hashMpt");
            return (Criteria) this;
        }

        public Criteria andHashMptNotIn(List<String> values) {
            addCriterion("HASH_MPT not in", values, "hashMpt");
            return (Criteria) this;
        }

        public Criteria andHashMptBetween(String value1, String value2) {
            addCriterion("HASH_MPT between", value1, value2, "hashMpt");
            return (Criteria) this;
        }

        public Criteria andHashMptNotBetween(String value1, String value2) {
            addCriterion("HASH_MPT not between", value1, value2, "hashMpt");
            return (Criteria) this;
        }

        public Criteria andHashPrevMptIsNull() {
            addCriterion("HASH_PREV_MPT is null");
            return (Criteria) this;
        }

        public Criteria andHashPrevMptIsNotNull() {
            addCriterion("HASH_PREV_MPT is not null");
            return (Criteria) this;
        }

        public Criteria andHashPrevMptEqualTo(String value) {
            addCriterion("HASH_PREV_MPT =", value, "hashPrevMpt");
            return (Criteria) this;
        }

        public Criteria andHashPrevMptNotEqualTo(String value) {
            addCriterion("HASH_PREV_MPT <>", value, "hashPrevMpt");
            return (Criteria) this;
        }

        public Criteria andHashPrevMptGreaterThan(String value) {
            addCriterion("HASH_PREV_MPT >", value, "hashPrevMpt");
            return (Criteria) this;
        }

        public Criteria andHashPrevMptGreaterThanOrEqualTo(String value) {
            addCriterion("HASH_PREV_MPT >=", value, "hashPrevMpt");
            return (Criteria) this;
        }

        public Criteria andHashPrevMptLessThan(String value) {
            addCriterion("HASH_PREV_MPT <", value, "hashPrevMpt");
            return (Criteria) this;
        }

        public Criteria andHashPrevMptLessThanOrEqualTo(String value) {
            addCriterion("HASH_PREV_MPT <=", value, "hashPrevMpt");
            return (Criteria) this;
        }

        public Criteria andHashPrevMptLike(String value) {
            addCriterion("HASH_PREV_MPT like", value, "hashPrevMpt");
            return (Criteria) this;
        }

        public Criteria andHashPrevMptNotLike(String value) {
            addCriterion("HASH_PREV_MPT not like", value, "hashPrevMpt");
            return (Criteria) this;
        }

        public Criteria andHashPrevMptIn(List<String> values) {
            addCriterion("HASH_PREV_MPT in", values, "hashPrevMpt");
            return (Criteria) this;
        }

        public Criteria andHashPrevMptNotIn(List<String> values) {
            addCriterion("HASH_PREV_MPT not in", values, "hashPrevMpt");
            return (Criteria) this;
        }

        public Criteria andHashPrevMptBetween(String value1, String value2) {
            addCriterion("HASH_PREV_MPT between", value1, value2, "hashPrevMpt");
            return (Criteria) this;
        }

        public Criteria andHashPrevMptNotBetween(String value1, String value2) {
            addCriterion("HASH_PREV_MPT not between", value1, value2, "hashPrevMpt");
            return (Criteria) this;
        }

        public Criteria andMptTypeIsNull() {
            addCriterion("MPT_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andMptTypeIsNotNull() {
            addCriterion("MPT_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andMptTypeEqualTo(String value) {
            addCriterion("MPT_TYPE =", value, "mptType");
            return (Criteria) this;
        }

        public Criteria andMptTypeNotEqualTo(String value) {
            addCriterion("MPT_TYPE <>", value, "mptType");
            return (Criteria) this;
        }

        public Criteria andMptTypeGreaterThan(String value) {
            addCriterion("MPT_TYPE >", value, "mptType");
            return (Criteria) this;
        }

        public Criteria andMptTypeGreaterThanOrEqualTo(String value) {
            addCriterion("MPT_TYPE >=", value, "mptType");
            return (Criteria) this;
        }

        public Criteria andMptTypeLessThan(String value) {
            addCriterion("MPT_TYPE <", value, "mptType");
            return (Criteria) this;
        }

        public Criteria andMptTypeLessThanOrEqualTo(String value) {
            addCriterion("MPT_TYPE <=", value, "mptType");
            return (Criteria) this;
        }

        public Criteria andMptTypeLike(String value) {
            addCriterion("MPT_TYPE like", value, "mptType");
            return (Criteria) this;
        }

        public Criteria andMptTypeNotLike(String value) {
            addCriterion("MPT_TYPE not like", value, "mptType");
            return (Criteria) this;
        }

        public Criteria andMptTypeIn(List<String> values) {
            addCriterion("MPT_TYPE in", values, "mptType");
            return (Criteria) this;
        }

        public Criteria andMptTypeNotIn(List<String> values) {
            addCriterion("MPT_TYPE not in", values, "mptType");
            return (Criteria) this;
        }

        public Criteria andMptTypeBetween(String value1, String value2) {
            addCriterion("MPT_TYPE between", value1, value2, "mptType");
            return (Criteria) this;
        }

        public Criteria andMptTypeNotBetween(String value1, String value2) {
            addCriterion("MPT_TYPE not between", value1, value2, "mptType");
            return (Criteria) this;
        }

        public Criteria andValueCountsIsNull() {
            addCriterion("VALUE_COUNTS is null");
            return (Criteria) this;
        }

        public Criteria andValueCountsIsNotNull() {
            addCriterion("VALUE_COUNTS is not null");
            return (Criteria) this;
        }

        public Criteria andValueCountsEqualTo(Integer value) {
            addCriterion("VALUE_COUNTS =", value, "valueCounts");
            return (Criteria) this;
        }

        public Criteria andValueCountsNotEqualTo(Integer value) {
            addCriterion("VALUE_COUNTS <>", value, "valueCounts");
            return (Criteria) this;
        }

        public Criteria andValueCountsGreaterThan(Integer value) {
            addCriterion("VALUE_COUNTS >", value, "valueCounts");
            return (Criteria) this;
        }

        public Criteria andValueCountsGreaterThanOrEqualTo(Integer value) {
            addCriterion("VALUE_COUNTS >=", value, "valueCounts");
            return (Criteria) this;
        }

        public Criteria andValueCountsLessThan(Integer value) {
            addCriterion("VALUE_COUNTS <", value, "valueCounts");
            return (Criteria) this;
        }

        public Criteria andValueCountsLessThanOrEqualTo(Integer value) {
            addCriterion("VALUE_COUNTS <=", value, "valueCounts");
            return (Criteria) this;
        }

        public Criteria andValueCountsIn(List<Integer> values) {
            addCriterion("VALUE_COUNTS in", values, "valueCounts");
            return (Criteria) this;
        }

        public Criteria andValueCountsNotIn(List<Integer> values) {
            addCriterion("VALUE_COUNTS not in", values, "valueCounts");
            return (Criteria) this;
        }

        public Criteria andValueCountsBetween(Integer value1, Integer value2) {
            addCriterion("VALUE_COUNTS between", value1, value2, "valueCounts");
            return (Criteria) this;
        }

        public Criteria andValueCountsNotBetween(Integer value1, Integer value2) {
            addCriterion("VALUE_COUNTS not between", value1, value2, "valueCounts");
            return (Criteria) this;
        }

        public Criteria andBlockStatusIsNull() {
            addCriterion("BLOCK_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andBlockStatusIsNotNull() {
            addCriterion("BLOCK_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andBlockStatusEqualTo(String value) {
            addCriterion("BLOCK_STATUS =", value, "blockStatus");
            return (Criteria) this;
        }

        public Criteria andBlockStatusNotEqualTo(String value) {
            addCriterion("BLOCK_STATUS <>", value, "blockStatus");
            return (Criteria) this;
        }

        public Criteria andBlockStatusGreaterThan(String value) {
            addCriterion("BLOCK_STATUS >", value, "blockStatus");
            return (Criteria) this;
        }

        public Criteria andBlockStatusGreaterThanOrEqualTo(String value) {
            addCriterion("BLOCK_STATUS >=", value, "blockStatus");
            return (Criteria) this;
        }

        public Criteria andBlockStatusLessThan(String value) {
            addCriterion("BLOCK_STATUS <", value, "blockStatus");
            return (Criteria) this;
        }

        public Criteria andBlockStatusLessThanOrEqualTo(String value) {
            addCriterion("BLOCK_STATUS <=", value, "blockStatus");
            return (Criteria) this;
        }

        public Criteria andBlockStatusLike(String value) {
            addCriterion("BLOCK_STATUS like", value, "blockStatus");
            return (Criteria) this;
        }

        public Criteria andBlockStatusNotLike(String value) {
            addCriterion("BLOCK_STATUS not like", value, "blockStatus");
            return (Criteria) this;
        }

        public Criteria andBlockStatusIn(List<String> values) {
            addCriterion("BLOCK_STATUS in", values, "blockStatus");
            return (Criteria) this;
        }

        public Criteria andBlockStatusNotIn(List<String> values) {
            addCriterion("BLOCK_STATUS not in", values, "blockStatus");
            return (Criteria) this;
        }

        public Criteria andBlockStatusBetween(String value1, String value2) {
            addCriterion("BLOCK_STATUS between", value1, value2, "blockStatus");
            return (Criteria) this;
        }

        public Criteria andBlockStatusNotBetween(String value1, String value2) {
            addCriterion("BLOCK_STATUS not between", value1, value2, "blockStatus");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("CREATE_TIME =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("CREATE_TIME <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("CREATE_TIME >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("CREATE_TIME <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("CREATE_TIME in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("CREATE_TIME not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("UPDATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("UPDATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("UPDATE_TIME =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("UPDATE_TIME <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("UPDATE_TIME >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("UPDATE_TIME >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("UPDATE_TIME <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("UPDATE_TIME <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("UPDATE_TIME in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("UPDATE_TIME not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("UPDATE_TIME between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("UPDATE_TIME not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andLogUuidLikeInsensitive(String value) {
            addCriterion("upper(LOG_UUID) like", value.toUpperCase(), "logUuid");
            return (Criteria) this;
        }

        public Criteria andBversionLikeInsensitive(String value) {
            addCriterion("upper(BVERSION) like", value.toUpperCase(), "bversion");
            return (Criteria) this;
        }

        public Criteria andHashMptLikeInsensitive(String value) {
            addCriterion("upper(HASH_MPT) like", value.toUpperCase(), "hashMpt");
            return (Criteria) this;
        }

        public Criteria andHashPrevMptLikeInsensitive(String value) {
            addCriterion("upper(HASH_PREV_MPT) like", value.toUpperCase(), "hashPrevMpt");
            return (Criteria) this;
        }

        public Criteria andMptTypeLikeInsensitive(String value) {
            addCriterion("upper(MPT_TYPE) like", value.toUpperCase(), "mptType");
            return (Criteria) this;
        }

        public Criteria andBlockStatusLikeInsensitive(String value) {
            addCriterion("upper(BLOCK_STATUS) like", value.toUpperCase(), "blockStatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated do_not_delete_during_merge Tue Aug 21 20:51:20 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        public Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BC_BLOCK_MPT
     *
     * @mbggenerated Tue Aug 21 20:51:20 CST 2018
     */
    @Data
    @NoArgsConstructor
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        public Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        public Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        public Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        public Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        public Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}