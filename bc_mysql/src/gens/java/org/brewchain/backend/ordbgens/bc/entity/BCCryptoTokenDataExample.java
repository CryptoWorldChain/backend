package org.brewchain.backend.ordbgens.bc.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
public class BCCryptoTokenDataExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    protected List<Criteria> oredCriteria;

    protected int offset;

    protected int limit;

    protected String sumCol;

    protected String groupSelClause;

    protected boolean forUpdate;

    protected String groupByClause;

    String selectCols;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public BCCryptoTokenDataExample() {
        oredCriteria = new ArrayList<Criteria>();
        offset = 0;
        limit = Integer.MAX_VALUE;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        this.offset= 0;
        this.limit= Integer.MAX_VALUE;
        this.sumCol=null;
        this.groupSelClause=null;
        this.groupByClause=null;
        this.forUpdate=false;
    }

    public void setOffset(int offset) {
         this.offset = offset;
    }

    public int getOffset() {
          return offset;
    }

    public void setLimit(int limit) {
         this.limit = limit;
    }

    public int getLimit() {
          return limit;
    }

    public void setSumCol(String sumCol) {
         this.sumCol = sumCol;
    }

    public String getSumCol() {
          return sumCol;
    }

    public void setGroupSelClause(String groupSelClause) {
         this.groupSelClause = groupSelClause;
    }

    public String getGroupSelClause() {
          return groupSelClause;
    }

    public void setForUpdate(boolean forUpdate) {
         this.forUpdate = forUpdate;
    }

    public boolean isForUpdate() {
          return forUpdate;
    }

    public void setGroupByClause(String groupByClause) {
         this.groupByClause = groupByClause;
    }

    public String getGroupByClause() {
          return groupByClause;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    @Data
    public abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        public GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        public void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        public void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        public void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTokenIdIsNull() {
            addCriterion("TOKEN_ID is null");
            return (Criteria) this;
        }

        public Criteria andTokenIdIsNotNull() {
            addCriterion("TOKEN_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTokenIdEqualTo(String value) {
            addCriterion("TOKEN_ID =", value, "tokenId");
            return (Criteria) this;
        }

        public Criteria andTokenIdNotEqualTo(String value) {
            addCriterion("TOKEN_ID <>", value, "tokenId");
            return (Criteria) this;
        }

        public Criteria andTokenIdGreaterThan(String value) {
            addCriterion("TOKEN_ID >", value, "tokenId");
            return (Criteria) this;
        }

        public Criteria andTokenIdGreaterThanOrEqualTo(String value) {
            addCriterion("TOKEN_ID >=", value, "tokenId");
            return (Criteria) this;
        }

        public Criteria andTokenIdLessThan(String value) {
            addCriterion("TOKEN_ID <", value, "tokenId");
            return (Criteria) this;
        }

        public Criteria andTokenIdLessThanOrEqualTo(String value) {
            addCriterion("TOKEN_ID <=", value, "tokenId");
            return (Criteria) this;
        }

        public Criteria andTokenIdLike(String value) {
            addCriterion("TOKEN_ID like", value, "tokenId");
            return (Criteria) this;
        }

        public Criteria andTokenIdNotLike(String value) {
            addCriterion("TOKEN_ID not like", value, "tokenId");
            return (Criteria) this;
        }

        public Criteria andTokenIdIn(List<String> values) {
            addCriterion("TOKEN_ID in", values, "tokenId");
            return (Criteria) this;
        }

        public Criteria andTokenIdNotIn(List<String> values) {
            addCriterion("TOKEN_ID not in", values, "tokenId");
            return (Criteria) this;
        }

        public Criteria andTokenIdBetween(String value1, String value2) {
            addCriterion("TOKEN_ID between", value1, value2, "tokenId");
            return (Criteria) this;
        }

        public Criteria andTokenIdNotBetween(String value1, String value2) {
            addCriterion("TOKEN_ID not between", value1, value2, "tokenId");
            return (Criteria) this;
        }

        public Criteria andTotalsIsNull() {
            addCriterion("TOTALS is null");
            return (Criteria) this;
        }

        public Criteria andTotalsIsNotNull() {
            addCriterion("TOTALS is not null");
            return (Criteria) this;
        }

        public Criteria andTotalsEqualTo(BigDecimal value) {
            addCriterion("TOTALS =", value, "totals");
            return (Criteria) this;
        }

        public Criteria andTotalsNotEqualTo(BigDecimal value) {
            addCriterion("TOTALS <>", value, "totals");
            return (Criteria) this;
        }

        public Criteria andTotalsGreaterThan(BigDecimal value) {
            addCriterion("TOTALS >", value, "totals");
            return (Criteria) this;
        }

        public Criteria andTotalsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("TOTALS >=", value, "totals");
            return (Criteria) this;
        }

        public Criteria andTotalsLessThan(BigDecimal value) {
            addCriterion("TOTALS <", value, "totals");
            return (Criteria) this;
        }

        public Criteria andTotalsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("TOTALS <=", value, "totals");
            return (Criteria) this;
        }

        public Criteria andTotalsIn(List<BigDecimal> values) {
            addCriterion("TOTALS in", values, "totals");
            return (Criteria) this;
        }

        public Criteria andTotalsNotIn(List<BigDecimal> values) {
            addCriterion("TOTALS not in", values, "totals");
            return (Criteria) this;
        }

        public Criteria andTotalsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TOTALS between", value1, value2, "totals");
            return (Criteria) this;
        }

        public Criteria andTotalsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("TOTALS not between", value1, value2, "totals");
            return (Criteria) this;
        }

        public Criteria andTokenSymbolIsNull() {
            addCriterion("TOKEN_SYMBOL is null");
            return (Criteria) this;
        }

        public Criteria andTokenSymbolIsNotNull() {
            addCriterion("TOKEN_SYMBOL is not null");
            return (Criteria) this;
        }

        public Criteria andTokenSymbolEqualTo(String value) {
            addCriterion("TOKEN_SYMBOL =", value, "tokenSymbol");
            return (Criteria) this;
        }

        public Criteria andTokenSymbolNotEqualTo(String value) {
            addCriterion("TOKEN_SYMBOL <>", value, "tokenSymbol");
            return (Criteria) this;
        }

        public Criteria andTokenSymbolGreaterThan(String value) {
            addCriterion("TOKEN_SYMBOL >", value, "tokenSymbol");
            return (Criteria) this;
        }

        public Criteria andTokenSymbolGreaterThanOrEqualTo(String value) {
            addCriterion("TOKEN_SYMBOL >=", value, "tokenSymbol");
            return (Criteria) this;
        }

        public Criteria andTokenSymbolLessThan(String value) {
            addCriterion("TOKEN_SYMBOL <", value, "tokenSymbol");
            return (Criteria) this;
        }

        public Criteria andTokenSymbolLessThanOrEqualTo(String value) {
            addCriterion("TOKEN_SYMBOL <=", value, "tokenSymbol");
            return (Criteria) this;
        }

        public Criteria andTokenSymbolLike(String value) {
            addCriterion("TOKEN_SYMBOL like", value, "tokenSymbol");
            return (Criteria) this;
        }

        public Criteria andTokenSymbolNotLike(String value) {
            addCriterion("TOKEN_SYMBOL not like", value, "tokenSymbol");
            return (Criteria) this;
        }

        public Criteria andTokenSymbolIn(List<String> values) {
            addCriterion("TOKEN_SYMBOL in", values, "tokenSymbol");
            return (Criteria) this;
        }

        public Criteria andTokenSymbolNotIn(List<String> values) {
            addCriterion("TOKEN_SYMBOL not in", values, "tokenSymbol");
            return (Criteria) this;
        }

        public Criteria andTokenSymbolBetween(String value1, String value2) {
            addCriterion("TOKEN_SYMBOL between", value1, value2, "tokenSymbol");
            return (Criteria) this;
        }

        public Criteria andTokenSymbolNotBetween(String value1, String value2) {
            addCriterion("TOKEN_SYMBOL not between", value1, value2, "tokenSymbol");
            return (Criteria) this;
        }

        public Criteria andTokenNameIsNull() {
            addCriterion("TOKEN_NAME is null");
            return (Criteria) this;
        }

        public Criteria andTokenNameIsNotNull() {
            addCriterion("TOKEN_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andTokenNameEqualTo(String value) {
            addCriterion("TOKEN_NAME =", value, "tokenName");
            return (Criteria) this;
        }

        public Criteria andTokenNameNotEqualTo(String value) {
            addCriterion("TOKEN_NAME <>", value, "tokenName");
            return (Criteria) this;
        }

        public Criteria andTokenNameGreaterThan(String value) {
            addCriterion("TOKEN_NAME >", value, "tokenName");
            return (Criteria) this;
        }

        public Criteria andTokenNameGreaterThanOrEqualTo(String value) {
            addCriterion("TOKEN_NAME >=", value, "tokenName");
            return (Criteria) this;
        }

        public Criteria andTokenNameLessThan(String value) {
            addCriterion("TOKEN_NAME <", value, "tokenName");
            return (Criteria) this;
        }

        public Criteria andTokenNameLessThanOrEqualTo(String value) {
            addCriterion("TOKEN_NAME <=", value, "tokenName");
            return (Criteria) this;
        }

        public Criteria andTokenNameLike(String value) {
            addCriterion("TOKEN_NAME like", value, "tokenName");
            return (Criteria) this;
        }

        public Criteria andTokenNameNotLike(String value) {
            addCriterion("TOKEN_NAME not like", value, "tokenName");
            return (Criteria) this;
        }

        public Criteria andTokenNameIn(List<String> values) {
            addCriterion("TOKEN_NAME in", values, "tokenName");
            return (Criteria) this;
        }

        public Criteria andTokenNameNotIn(List<String> values) {
            addCriterion("TOKEN_NAME not in", values, "tokenName");
            return (Criteria) this;
        }

        public Criteria andTokenNameBetween(String value1, String value2) {
            addCriterion("TOKEN_NAME between", value1, value2, "tokenName");
            return (Criteria) this;
        }

        public Criteria andTokenNameNotBetween(String value1, String value2) {
            addCriterion("TOKEN_NAME not between", value1, value2, "tokenName");
            return (Criteria) this;
        }

        public Criteria andTokenCodeIsNull() {
            addCriterion("TOKEN_CODE is null");
            return (Criteria) this;
        }

        public Criteria andTokenCodeIsNotNull() {
            addCriterion("TOKEN_CODE is not null");
            return (Criteria) this;
        }

        public Criteria andTokenCodeEqualTo(String value) {
            addCriterion("TOKEN_CODE =", value, "tokenCode");
            return (Criteria) this;
        }

        public Criteria andTokenCodeNotEqualTo(String value) {
            addCriterion("TOKEN_CODE <>", value, "tokenCode");
            return (Criteria) this;
        }

        public Criteria andTokenCodeGreaterThan(String value) {
            addCriterion("TOKEN_CODE >", value, "tokenCode");
            return (Criteria) this;
        }

        public Criteria andTokenCodeGreaterThanOrEqualTo(String value) {
            addCriterion("TOKEN_CODE >=", value, "tokenCode");
            return (Criteria) this;
        }

        public Criteria andTokenCodeLessThan(String value) {
            addCriterion("TOKEN_CODE <", value, "tokenCode");
            return (Criteria) this;
        }

        public Criteria andTokenCodeLessThanOrEqualTo(String value) {
            addCriterion("TOKEN_CODE <=", value, "tokenCode");
            return (Criteria) this;
        }

        public Criteria andTokenCodeLike(String value) {
            addCriterion("TOKEN_CODE like", value, "tokenCode");
            return (Criteria) this;
        }

        public Criteria andTokenCodeNotLike(String value) {
            addCriterion("TOKEN_CODE not like", value, "tokenCode");
            return (Criteria) this;
        }

        public Criteria andTokenCodeIn(List<String> values) {
            addCriterion("TOKEN_CODE in", values, "tokenCode");
            return (Criteria) this;
        }

        public Criteria andTokenCodeNotIn(List<String> values) {
            addCriterion("TOKEN_CODE not in", values, "tokenCode");
            return (Criteria) this;
        }

        public Criteria andTokenCodeBetween(String value1, String value2) {
            addCriterion("TOKEN_CODE between", value1, value2, "tokenCode");
            return (Criteria) this;
        }

        public Criteria andTokenCodeNotBetween(String value1, String value2) {
            addCriterion("TOKEN_CODE not between", value1, value2, "tokenCode");
            return (Criteria) this;
        }

        public Criteria andExtradataIsNull() {
            addCriterion("EXTRADATA is null");
            return (Criteria) this;
        }

        public Criteria andExtradataIsNotNull() {
            addCriterion("EXTRADATA is not null");
            return (Criteria) this;
        }

        public Criteria andExtradataEqualTo(String value) {
            addCriterion("EXTRADATA =", value, "extradata");
            return (Criteria) this;
        }

        public Criteria andExtradataNotEqualTo(String value) {
            addCriterion("EXTRADATA <>", value, "extradata");
            return (Criteria) this;
        }

        public Criteria andExtradataGreaterThan(String value) {
            addCriterion("EXTRADATA >", value, "extradata");
            return (Criteria) this;
        }

        public Criteria andExtradataGreaterThanOrEqualTo(String value) {
            addCriterion("EXTRADATA >=", value, "extradata");
            return (Criteria) this;
        }

        public Criteria andExtradataLessThan(String value) {
            addCriterion("EXTRADATA <", value, "extradata");
            return (Criteria) this;
        }

        public Criteria andExtradataLessThanOrEqualTo(String value) {
            addCriterion("EXTRADATA <=", value, "extradata");
            return (Criteria) this;
        }

        public Criteria andExtradataLike(String value) {
            addCriterion("EXTRADATA like", value, "extradata");
            return (Criteria) this;
        }

        public Criteria andExtradataNotLike(String value) {
            addCriterion("EXTRADATA not like", value, "extradata");
            return (Criteria) this;
        }

        public Criteria andExtradataIn(List<String> values) {
            addCriterion("EXTRADATA in", values, "extradata");
            return (Criteria) this;
        }

        public Criteria andExtradataNotIn(List<String> values) {
            addCriterion("EXTRADATA not in", values, "extradata");
            return (Criteria) this;
        }

        public Criteria andExtradataBetween(String value1, String value2) {
            addCriterion("EXTRADATA between", value1, value2, "extradata");
            return (Criteria) this;
        }

        public Criteria andExtradataNotBetween(String value1, String value2) {
            addCriterion("EXTRADATA not between", value1, value2, "extradata");
            return (Criteria) this;
        }

        public Criteria andTokenStatusIsNull() {
            addCriterion("TOKEN_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andTokenStatusIsNotNull() {
            addCriterion("TOKEN_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andTokenStatusEqualTo(String value) {
            addCriterion("TOKEN_STATUS =", value, "tokenStatus");
            return (Criteria) this;
        }

        public Criteria andTokenStatusNotEqualTo(String value) {
            addCriterion("TOKEN_STATUS <>", value, "tokenStatus");
            return (Criteria) this;
        }

        public Criteria andTokenStatusGreaterThan(String value) {
            addCriterion("TOKEN_STATUS >", value, "tokenStatus");
            return (Criteria) this;
        }

        public Criteria andTokenStatusGreaterThanOrEqualTo(String value) {
            addCriterion("TOKEN_STATUS >=", value, "tokenStatus");
            return (Criteria) this;
        }

        public Criteria andTokenStatusLessThan(String value) {
            addCriterion("TOKEN_STATUS <", value, "tokenStatus");
            return (Criteria) this;
        }

        public Criteria andTokenStatusLessThanOrEqualTo(String value) {
            addCriterion("TOKEN_STATUS <=", value, "tokenStatus");
            return (Criteria) this;
        }

        public Criteria andTokenStatusLike(String value) {
            addCriterion("TOKEN_STATUS like", value, "tokenStatus");
            return (Criteria) this;
        }

        public Criteria andTokenStatusNotLike(String value) {
            addCriterion("TOKEN_STATUS not like", value, "tokenStatus");
            return (Criteria) this;
        }

        public Criteria andTokenStatusIn(List<String> values) {
            addCriterion("TOKEN_STATUS in", values, "tokenStatus");
            return (Criteria) this;
        }

        public Criteria andTokenStatusNotIn(List<String> values) {
            addCriterion("TOKEN_STATUS not in", values, "tokenStatus");
            return (Criteria) this;
        }

        public Criteria andTokenStatusBetween(String value1, String value2) {
            addCriterion("TOKEN_STATUS between", value1, value2, "tokenStatus");
            return (Criteria) this;
        }

        public Criteria andTokenStatusNotBetween(String value1, String value2) {
            addCriterion("TOKEN_STATUS not between", value1, value2, "tokenStatus");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("CREATE_TIME =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("CREATE_TIME <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("CREATE_TIME >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("CREATE_TIME <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("CREATE_TIME in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("CREATE_TIME not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("UPDATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("UPDATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("UPDATE_TIME =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("UPDATE_TIME <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("UPDATE_TIME >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("UPDATE_TIME >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("UPDATE_TIME <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("UPDATE_TIME <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("UPDATE_TIME in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("UPDATE_TIME not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("UPDATE_TIME between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("UPDATE_TIME not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andTokenIdLikeInsensitive(String value) {
            addCriterion("upper(TOKEN_ID) like", value.toUpperCase(), "tokenId");
            return (Criteria) this;
        }

        public Criteria andTokenSymbolLikeInsensitive(String value) {
            addCriterion("upper(TOKEN_SYMBOL) like", value.toUpperCase(), "tokenSymbol");
            return (Criteria) this;
        }

        public Criteria andTokenNameLikeInsensitive(String value) {
            addCriterion("upper(TOKEN_NAME) like", value.toUpperCase(), "tokenName");
            return (Criteria) this;
        }

        public Criteria andTokenCodeLikeInsensitive(String value) {
            addCriterion("upper(TOKEN_CODE) like", value.toUpperCase(), "tokenCode");
            return (Criteria) this;
        }

        public Criteria andExtradataLikeInsensitive(String value) {
            addCriterion("upper(EXTRADATA) like", value.toUpperCase(), "extradata");
            return (Criteria) this;
        }

        public Criteria andTokenStatusLikeInsensitive(String value) {
            addCriterion("upper(TOKEN_STATUS) like", value.toUpperCase(), "tokenStatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated do_not_delete_during_merge Tue Aug 21 20:42:28 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        public Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BC_CRYPTO_TOKEN_DATA
     *
     * @mbggenerated Tue Aug 21 20:42:28 CST 2018
     */
    @Data
    @NoArgsConstructor
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        public Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        public Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        public Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        public Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        public Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}