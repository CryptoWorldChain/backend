
use brewchain;
drop table if exists BC_BLOCK;
create table BC_BLOCK
(
  	LOG_UUID         	VARCHAR(64)  NOT NULL COMMENT '唯一字段',
  	BVERSION			VARCHAR(8) 	DEFAULT 'CEBPOC'  NOT NULL COMMENT '版本',
	SECOND_IDX			VARCHAR(128)  NOT NULL COMMENT '通用二级索引',
	
	BH_PARENT_HASH    		VARCHAR(128)  NOT NULL COMMENT '区块HASH',
	BH_STATE_ROOT    		VARCHAR(128)  NOT NULL COMMENT 'MTREE',
    BH_BLOCK_HASH    		VARCHAR(128)  NOT NULL COMMENT 'MTREE',

    BH_TXT_RIEROOT    		VARCHAR(128)  NOT NULL COMMENT '区块HASH',
	BH_RECEIPT_TRIEROOT     VARCHAR(128)  NOT NULL COMMENT 'MTREE',
    
    BH_TIMESTAMP        DECIMAL(24,0)  NOT NULL COMMENT '时间戳',
    BH_NUMBER        	DECIMAL(24,0)  NOT NULL COMMENT '当前区块高度',

	BH_TXN_COUNT			INT		DEFAULT 0 COMMENT '事务个数',
    BH_SLICEID				INT		DEFAULT 0 COMMENT '数据分片',

	BH_EXTRADATA			VARCHAR(1024)  COMMENT '扩展信息',

	BM_NODE				VARCHAR(128)  NOT NULL COMMENT '出块的节点',
	BM_REWARD_HEX		VARCHAR(128)  NOT NULL COMMENT '出块的奖励', 
	BM_ADDRESS			VARCHAR(64)  NOT NULL COMMENT '出块的地址', 
	BM_BCUID			VARCHAR(64)  NOT NULL COMMENT '出块的BCUID', 

	BLOCK_STATUS		CHAR(1)	COMMENT '区块状态:(0:新建,1:已确认,2:废弃,3:其他)',
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (LOG_UUID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8 ;
create index BC_BLOCKCHAIN_SECOND_IDX on BC_BLOCK
(
   SECOND_IDX
);
create index BC_BLOCKCHAIN_BLOCK_HASH on BC_BLOCK
(
   BH_BLOCK_HASH
);
create index BC_BLOCKCHAIN_BH_NUMBER on BC_BLOCK
(
   BH_NUMBER
);



drop table if exists BC_BLOCK_MPT;
create table BC_BLOCK_MPT
(
  	LOG_UUID         	VARCHAR(64)  NOT NULL COMMENT '唯一字段',
  	BVERSION			VARCHAR(8) 	DEFAULT 'CEBPOC'  NOT NULL COMMENT '版本',
	BLOCK_HEIGHT        DECIMAL(24,0)  NOT NULL COMMENT '当前区块高度',

	HASH_MPT    		VARCHAR(128)  NOT NULL COMMENT 'MPT_HASH',
	HASH_PREV_MPT    VARCHAR(128)  NOT NULL COMMENT '上一个hash值',
    
    MPT_TYPE			VARCHAR(8) default '0000'COMMENT '树的类别',
    
	VALUE_COUNTS			INT		DEFAULT 0 comment 'value的数值',
    
	BLOCK_STATUS		CHAR(1)	COMMENT '区块状态:(0:新建,1:已确认,2:废弃,3:其他)',
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (LOG_UUID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8 ;
create index BC_BLOCK_MPT_BLOCK_HEIGHT on BC_BLOCK_MPT
(
   BLOCK_HEIGHT
);
create index BC_BLOCK_MPT_HASH_MPT on BC_BLOCK_MPT
(
   HASH_MPT
);

drop table if exists BC_GLOBAL_PROPS;
create table BC_GLOBAL_PROPS
(
  	LOG_UUID         	VARCHAR(64)  NOT NULL COMMENT '唯一字段',
  	BVERSION			VARCHAR(8) 	DEFAULT 'CEBPOC'  NOT NULL COMMENT '版本（末尾为共识算法：N-没有，P-bft，O-PoS算法，R-Raft',
	BLOCK_HEIGHT        DECIMAL(24,0)  NOT NULL COMMENT '所在的区块高度',

	PROP_KEY    		VARCHAR(128)  NOT NULL COMMENT 'HashKey值',
	PROP_VALUE    		VARCHAR(512)  NOT NULL COMMENT '属性值',
	MPT_TYPE			VARCHAR(8) default '0000'COMMENT '树的类别',
	
	HASH_VALUE    		VARCHAR(128)  NOT NULL COMMENT '属性值',
	TXID				VARCHAR(128)  NOT NULL COMMENT '所在的txid为止',
	PREV_HASH_VALUE    	VARCHAR(128)  NOT NULL COMMENT '属性值',
    PREV_BLOCK_HEIGHT      DECIMAL(24,0)  NOT NULL COMMENT '上次修改的所在的区块高度',

	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (LOG_UUID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8 ;
create index BC_GLOBAL_PROPS_BLOCK_HEIGHT on BC_GLOBAL_PROPS
(
   BLOCK_HEIGHT
);
create index BC_GLOBAL_PROPS_PROP_KEY on BC_GLOBAL_PROPS
(
   PROP_KEY
);
create index BC_GLOBAL_PROPS_TXID on BC_GLOBAL_PROPS
(
   TXID
);
create index BC_GLOBAL_PREV_HASH_VALUE on BC_GLOBAL_PROPS
(
   PREV_HASH_VALUE
);


drop table if exists BC_TRADE;

drop table if exists BC_MUTIL_TRANSACTON;

create table BC_MUTIL_TRANSACTON
(
  	TX_HASH         	VARCHAR(128)  NOT NULL COMMENT '唯一字段',
  	BVERSION			VARCHAR(8) 	DEFAULT 'CEBPOC'  NOT NULL COMMENT '版本',
	HASH_MERKLE_ROOT    VARCHAR(128)  NOT NULL COMMENT 'MTREE',
	BLOCK_HEIGHT        DECIMAL(24,0)  NOT NULL COMMENT '当前区块高度',
	ADDRESS_IN_COUNT			INT		DEFAULT 0 comment '地址个数',
	ADDRESS_OUT_COUNT			INT		DEFAULT 0 comment '事务个数',
	PROP_COUNT			INT		DEFAULT 0 comment '属性',
				

	TX_STATUS		CHAR(1)	COMMENT '区块状态:(0:新建,1:已确认,2:废弃,3:其他)',
	INDEX_IN_BLOCK		int DEFAULT 0 COMMENT '处于区块的位置',
	RESULTS_HEX		VARCHAR(256)  COMMENT '结果',    
	DATA			VARCHAR(1024)  COMMENT '数据',    
	EXTRA_DATA		VARCHAR(2048)  COMMENT '其他数据',  
	TX_TIMESTAMP  	DECIMAL(24,0)   COMMENT '创建时间',
    TX_TYPE			int DEFAULT 0 COMMENT '交易类型',

	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (TX_HASH)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8;
create index T_BC_TRANSACTON_BLOCK_ID on BC_MUTIL_TRANSACTON
(
   HASH_MERKLE_ROOT
);

drop table if exists BC_MTX_INPUT;

create table BC_MTX_INPUT
(
	MTX_INPUTID         	VARCHAR(128)  NOT NULL COMMENT '唯一字段',
  	BC_ADDRESS         	VARCHAR(128)  NOT NULL COMMENT '地址',
  	MTX_HASH         	VARCHAR(128)  NOT NULL COMMENT '外键',
  	BC_NONCE			INT 	DEFAULT 0  NOT NULL COMMENT 'nonce',
	AMOUNT        		DECIMAL(24,0)  NOT NULL COMMENT '数量',
	TOKEN_ID			VARCHAR(64)  NOT NULL COMMENT 'TOKEN_ID',
	TOKEN_SYMBOL		VARCHAR(32)  NOT NULL COMMENT '代码',
	CRYPTO_TOKEN_HEX	 	VARCHAR(128)  NOT NULL COMMENT 'tokenhex',
	TX_STATUS		CHAR(1)	COMMENT '区块状态:(0:新建,1:已确认,2:废弃,3:其他)',
	INDEX_IN_TX	int DEFAULT 0 COMMENT '处于交易的位置',
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (MTX_INPUTID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8;
create index BC_MTX_INPUTS_ADDR on BC_MTX_INPUT
(
   BC_ADDRESS
);
create index BC_MTX_INPUTS_MTX_HASH on BC_MTX_INPUT
(
   MTX_HASH
);

drop table if exists BC_MTX_OUTPUT;

create table BC_MTX_OUTPUT
(
	MTX_OUTPUTID         	VARCHAR(128)  NOT NULL COMMENT '唯一字段',
  	BC_ADDRESS         	VARCHAR(128)  NOT NULL COMMENT '地址',
  	MTX_HASH         	VARCHAR(128)  NOT NULL COMMENT '外键',
	AMOUNT        		DECIMAL(24,0)  NOT NULL COMMENT '数量',
	TOKEN_SYMBOL		VARCHAR(32)  NOT NULL COMMENT '代码',
	TX_STATUS		CHAR(1)	COMMENT '区块状态:(0:新建,1:已确认,2:废弃,3:其他)',
	INDEX_IN_TX	int DEFAULT 0 COMMENT '处于交易的位置',
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (MTX_OUTPUTID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8;
create index BC_MTX_OUTPUTS_ADDR on BC_MTX_OUTPUT
(
   BC_ADDRESS
);
create index BC_MTX_OUTPUTS_MTX_HASH on BC_MTX_OUTPUT
(
   MTX_HASH
);



drop table if exists BC_MTX_SIGNATURE;

create table BC_MTX_SIGNATURE
(
	MTX_SIGNID         	VARCHAR(128)  NOT NULL COMMENT '唯一字段',
	BC_ADDRESS         	VARCHAR(128)  NOT NULL COMMENT '地址',

  	MTX_HASH         	VARCHAR(128)  NOT NULL COMMENT '外键',
	SIGN_DATA		VARCHAR(1024)  COMMENT '其他数据',    
	TX_STATUS		CHAR(1)	COMMENT '区块状态:(0:新建,1:已确认,2:废弃,3:其他)',
	INDEX_IN_TX	int DEFAULT 0 COMMENT '处于交易的位置',
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (MTX_SIGNID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8;
create index BC_MTX_SIGN_ADDR on BC_MTX_SIGNATURE
(
   BC_ADDRESS
);
create index BC_MTX_SIGN_MTX_HASH on BC_MTX_SIGNATURE
(
   MTX_HASH
);


drop table if exists BC_CRYPTO_TOKEN_DATA;

create table BC_CRYPTO_TOKEN_DATA
(
	TOKEN_ID         	VARCHAR(128)  NOT NULL COMMENT '唯一字段',
	TOTALS        		DECIMAL(24,0)  NOT NULL COMMENT '数量',
	TOKEN_SYMBOL		VARCHAR(32)  NOT NULL COMMENT '代码',
	TOKEN_NAME		VARCHAR(32)  NOT NULL COMMENT '代码',
	TOKEN_CODE		VARCHAR(32)  NOT NULL COMMENT '代码',
	EXTRADATA			VARCHAR(1024)  COMMENT '扩展信息',
	TOKEN_STATUS		CHAR(1)	COMMENT '区块状态:(0:新建,1:已确认,2:废弃,3:其他)',
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (TOKEN_ID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8;
create index BC_TOKEN_DATA_TOKEN_SYMBOL on BC_CRYPTO_TOKEN_DATA
(
   TOKEN_SYMBOL
);
create index BC_TOKEN_DATA_TOKEN_CODE on BC_CRYPTO_TOKEN_DATA
(
   TOKEN_CODE
);

drop table if exists BC_ACCOUNT;

create table BC_ACCOUNT
(
	ACT_ADDRESS         	VARCHAR(128)  NOT NULL COMMENT '唯一字段',
	ACT_NONCE			INT 	DEFAULT 0  NOT NULL COMMENT 'nonce',
	ACT_BALANCE        		DECIMAL(24,0)  COMMENT '数量',
	ACT_MAX        			DECIMAL(24,0)  COMMENT '数量',
	ACT_ACCEPT_MAX        DECIMAL(24,0)  COMMENT '数量',
	ACT_ACCEPT_LIMIT        		DECIMAL(24,0)  COMMENT '数量',
	STORAGE_HEX         	VARCHAR(128) ,
	CODE_HASH_HEX         	VARCHAR(128) ,
	CODE_HEX         	VARCHAR(128) ,
	DATA_HEX         	VARCHAR(128) ,
	ACT_STATUS		CHAR(1)	COMMENT '状态:(0:新建,1:已确认,2:废弃,3:其他)',
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (ACT_ADDRESS)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8;


drop table if exists BC_ACT_TOKEN_VALUE;

create table BC_ACT_TOKEN_VALUE
(
	ACTV_TOKEN_ID         	VARCHAR(128)  NOT NULL COMMENT '唯一字段',
	ACT_ADDRESS			VARCHAR(128)  NOT NULL COMMENT '外建关联',
	ACTV_TOKEN			VARCHAR(128)  NOT NULL COMMENT '外建关联',
	ACTV_BALANCE        		DECIMAL(24,0)  COMMENT '数量',
	ACTV_LOCKED        			DECIMAL(24,0)  COMMENT '数量',
	ACTT_STATUS		CHAR(1)	COMMENT '状态:(0:新建,1:已确认,2:废弃,3:其他)',
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (ACTV_TOKEN_ID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8;

create index BC_ACTV_ACT_ADDR on BC_ACT_TOKEN_VALUE
(
   ACT_ADDRESS
);
create index BC_ACTV_TOKEN on BC_ACT_TOKEN_VALUE
(
   ACTV_TOKEN
);


drop table if exists BC_ACT_CRYPTO_VALUE;

create table BC_ACT_CRYPTO_VALUE
(
	ACTV_UID			VARCHAR(128)  NOT NULL COMMENT '唯一字段',
	ACTV_HASH			VARCHAR(128)  NOT NULL COMMENT 'hash',
	ACT_ADDRESS			VARCHAR(128)  NOT NULL COMMENT '外建关联',
	ACTV_OWNER			VARCHAR(128)  COMMENT '外建关联',
	ACTV_NAME         	VARCHAR(64) ,
	ACTV_CODE         	VARCHAR(64) ,
	
	ACTV_NONCE        	int  COMMENT '',
	ACTV_TIMESTAMP        		DECIMAL(24,0)  COMMENT '',
	ACTV_OWNERTIME        		DECIMAL(24,0)  COMMENT '',
	ACTV_INDEX        		DECIMAL(24,0)  COMMENT '',
	ACTV_TOTAL        		DECIMAL(24,0)  COMMENT '',
	DATA_HEX         	VARCHAR(1024) ,

	ACTV_STATUS		CHAR(1)	COMMENT '状态:(0:新建,1:已确认,2:废弃,3:其他)',
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (ACTV_UID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8;
create index BC_ACV_ACT_ADDR on BC_ACT_CRYPTO_VALUE
(
   ACT_ADDRESS
);


drop table if exists BC_ACT_ADDRESS;

create table BC_ACT_ADDRESS
(
	ADDRESS_UID        	VARCHAR(128)  NOT NULL COMMENT '唯一字段',
	ACT_ADDRESS			VARCHAR(128)  NOT NULL COMMENT '外建关联',
	ACTA_STATUS		CHAR(1)	COMMENT '状态:(0:新建,1:已确认,2:废弃,3:其他)',
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (ADDRESS_UID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8;

create index BC_ACTA_ACT_ADDR on BC_ACT_ADDRESS
(
   ACT_ADDRESS
);



drop table if exists BC_TRANSACTON;

create table BC_TRANSACTON
(
  	TXID         		VARCHAR(128)  NOT NULL COMMENT '唯一字段',
  	BVERSION			VARCHAR(8) 	DEFAULT 'CEBPOC'  NOT NULL COMMENT '版本',
	HASH_MERKLE_ROOT    VARCHAR(128)  NOT NULL COMMENT 'MTREE',
	BLOCK_HEIGHT        DECIMAL(24,0)  NOT NULL COMMENT '当前区块高度',
	ADDRESS_IN_COUNT			INT		DEFAULT 0 comment '地址个数',
	ADDRESS_OUT_COUNT			INT		DEFAULT 0 comment '事务个数',
	PROP_COUNT			INT		DEFAULT 0 comment '属性',
				

	TX_STATUS		CHAR(1)	COMMENT '区块状态:(0:新建,1:已确认,2:废弃,3:其他)',
	INDEX_IN_BLOCK		int DEFAULT 0 COMMENT '处于区块的位置',
	EXT_COMMENTS		VARCHAR(1024)  COMMENT '扩展信息',    
    
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (TXID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8;
create index BC_TRANSACTON_BLOCK_ID on BC_TRANSACTON
(
   HASH_MERKLE_ROOT
);
drop table if exists BC_TRANSACTON_ADDRESS;
create table BC_TRANSACTON_ADDRESS
(
  	LOG_UUID         	VARCHAR(128)  NOT NULL COMMENT '唯一字段',
  	ADDRESS			VARCHAR(128)  NOT NULL COMMENT '地址',
  	BVERSION			VARCHAR(8) 	DEFAULT 'CEBPOC'  NOT NULL COMMENT '版本',
	TXID         	VARCHAR(128)  NOT NULL COMMENT 'txid',
    PREV_TXID         	VARCHAR(128)  NOT NULL COMMENT '上个交易的txid',
    INDEX_IN_TX		int DEFAULT 0 COMMENT '处于交易的位置',
    ADDR_TYPE		CHAR(2) COMMENT 'I:输入,O:输出,C:合约,P:属性,A:地址',
    NEXT_SCRIPT_ID 		VARCHAR(128)  COMMENT '对应合约的ID',
    SVALUE			decimal(24,8) COMMENT '资金',
    FEE				decimal(24,8) COMMENT '交易费',
    TAX				decimal(24,8) COMMENT '税费',
	EXT_COMMENTS		VARCHAR(1024)  COMMENT '附言扩展信息',    
	CREATE_TIME         datetime DEFAULT CURRENT_TIMESTAMP COMMENT '记录创建时间',
	UPDATE_TIME         datetime  ON UPDATE CURRENT_TIMESTAMP COMMENT '记录更新时间',
   primary key (TXID)
) ENGINE=InnoDB DEFAULT CHARSET=UTF8;
create index BC_TRANSACTON_TXID on BC_TRANSACTON_ADDRESS
(
   TXID
);
create index T_BC_TRANSACTON_ADDRESS on BC_TRANSACTON_ADDRESS
(
   ADDRESS
);
